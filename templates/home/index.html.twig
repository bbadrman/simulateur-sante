{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!
{% endblock %}

{% block body %}

	{% for message in app.flashes('success') %}
		<div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4">
			{{ message }}
		</div>
	{% endfor %}


	<!-- Form Section -->
	<section class="form-section" id="formulaire">
		<div class="container">
			<div class="form-container">

				<div class="form-header">
					<div class="header-top">
						<div class="logo-section">
							<div class="logo">
								<i class="fas fa-heartbeat"></i>
							</div>
							<div class="logo-text">Mutuelle Santé senior</div>

						</div>

						<a href="tel:0187660357" class="phone-number">
							<i class="fas fa-phone text-lg lg:text-2xl text-dark"></i>
							01 87 66 03 57</a>

					</div>
					<p>Tarif personalisé en 2 minutes</p>

				</div>


				<div class="form-steps">
					<div class="step active">
						Étape 1<span class="step-description">: Votre profil</span>
					</div>
					<div class="step">
						Étape 2<span class="step-description">: Votre tarif</span>
					</div>
				</div>
				{% if not form.vars.valid %}
					<div class="error-messages">

						<div>

							<ul>
								{% for child in form.children %}
									{% if child.vars.errors is defined %}
										{% for error in child.vars.errors %}

											<li>
												<i class="fas fa-exclamation-triangle"></i>
												{{ error.message }}</li>

										{% endfor %}
									{% endif %}
								{% endfor %}
							</ul>
						</div>
					</div>
				{% endif %}


				<div class="form-body">
					{{ form_start(form, {'attr': {'id': 'contactForm', 'class': 'space-y-6'}}) }}

					<!-- Step 1 - Maintenant "Vos besoins en assurance" -->
					<div class="form-step active" id="step1">
						<h3>Votre profil d’assuré</h3>


						<div class="form-group">


							{{ form_row(form.brithdate, {'attr': {'class': 'form-control'}}) }}

						</div>

						<div class="form-group">

							{{ form_row(form.postal, {'attr': {'class': 'form-control'}}) }}
						</div>


						<div class="form-group">
							{{ form_row(form.regimSocial, {'attr': {'class': 'form-control'}}) }}
						</div>

						{# --- Champ benificaire --- #}
						<div class="form-group">
							{{ form_row(form.benificaire, {'attr': {'class': 'form-control', 'id': 'benificaire'}}) }}
						</div>

						{# Conteneur pour le nombre de bénéficiaires #}
						<div class="form-group" id="nbrBenificGroup" style="display: none;">
							{{ form_row(form.nbrBenific, {'attr': {'class': 'form-control', 'id': 'contrat-nombre-assureur'}}) }}

						</div>

						{# --- Champs des dates des bénéficiaires avec IDs spécifiques --- #}
						{# --- Conteneur pour les champs de date des bénéficiaires --- #}
						<div id="dateFieldsContainer">
							<div class="form-group date-field" id="dateField1" style="display: none;">
								{{ form_row(form.date1, {'attr': {'class': 'form-control date-input'}}) }}
							</div>
							<div class="form-group date-field" id="dateField2" style="display: none;">
								{{ form_row(form.date2, {'attr': {'class': 'form-control date-input'}}) }}
							</div>
							<div class="form-group date-field" id="dateField3" style="display: none;">
								{{ form_row(form.date3, {'attr': {'class': 'form-control date-input'}}) }}
							</div>
							<div class="form-group date-field" id="dateField4" style="display: none;">
								{{ form_row(form.date4, {'attr': {'class': 'form-control date-input'}}) }}
							</div>
						</div>


						<div class="form-footer">


							<button class="btn-premiere" id="next-step1" type="button" style="text-align:center;">Continuer</button>


						</div>

					</div>

					<!-- Step 2 - Maintenant "Votre profil" -->
					<div class="form-step" id="step2">
						<h3>Votre profil</h3>


						<div class="form-group">
							{{ form_label(form.nom, 'Nom') }}
							{{ form_widget(form.nom, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Votre nom'
                                }
                            }) }}
							{{ form_errors(form.nom) }}
						</div>

						<div class="form-group">
							{{ form_label(form.prenom, 'Prénom') }}
							{{ form_widget(form.prenom, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'Votre prénom'
                                }
                            }) }}
							{{ form_errors(form.prenom) }}
						</div>

						<div class="form-group">
							{{ form_label(form.tel, 'Téléphone') }}
							{{ form_widget(form.tel, {
        'attr': {
            'class': 'form-control' ~ (form.tel.vars.errors|length > 0 ? ' is-invalid' : ''),
            'placeholder': '01 23 45 67 89'
        }
    }) }}
							{% if form.tel.vars.errors|length > 0 %}
								<div class="invalid-feedback">
									{% for error in form.tel.vars.errors %}
										{{ error.message }}
									{% endfor %}
								</div>
							{% endif %}
						</div>


						<div class="form-group">
							{{ form_label(form.email, 'Email') }}
							{{ form_widget(form.email, {
                                'attr': {
                                    'class': 'form-control',
                                    'placeholder': 'email@gmail.com'
                                }
                            }) }}
							{{ form_errors(form.email) }}
						</div>

						<div class="checkbox-group">
							<p>
								<strong>Nous n'aimons pas le spam non plus !</strong><br>
								Votre adresse email nous permettra de vous envoyer le résumé de votre projet.</p>

							<div class="checkbox-option">
								<input type="checkbox" id="newsletter">
								<label for="newsletter">J'accepte de recevoir les offres de mutuelle-sante.fr par email et/ou par SMS.</label>
							</div>

							<div class="checkbox-option">
								<input type="checkbox" id="partners" checked>
								<label for="partners">J'accepte de recevoir les offres commerciales des partenaires de mutuelle-sante.fr par mail et/ou par SMS.</label>
							</div>
						</div>

						<div class="form-footer">
							<button class="btn btn-outline" id="prev-step2" type="button">Retour</button>

							<button class="btn" id="confirm" type="submit">Confirmer</button>

						</div>
					</div>

					{{ form_end(form) }}
				</div>
			</div>
		</div>
	</section>

	 <script>
																document.addEventListener('DOMContentLoaded', function() {
																    
																    // 1. Configuration du viewport pour Safari Mobile
																    function initSafariMobileFix() {
																        const isSafariMobile = /Safari/.test(navigator.userAgent) && 
																                              /Mobile/.test(navigator.userAgent) && 
																                              !/Chrome/.test(navigator.userAgent);
																        
																        if (isSafariMobile) {
																            console.log('Safari Mobile détecté - Application des correctifs légers');
																            
																            // Variable CSS pour la hauteur viewport
																            function setVH() {
																                let vh = window.innerHeight * 0.01;
																                document.documentElement.style.setProperty('--vh-unit', `${vh}px`);
																            }
																            
																            // Configuration initiale
																            setVH();
																            document.body.classList.add('safari-mobile-device');
																            
																            // Mise à jour lors des changements
																            window.addEventListener('resize', () => {
																                clearTimeout(window.vhTimeout);
																                window.vhTimeout = setTimeout(setVH, 100);
																            });
																            
																            window.addEventListener('orientationchange', () => {
																                setTimeout(setVH, 300);
																            });
																        }
																    }
																    
																    // 2. Gestion des bénéficiaires (version simplifiée et robuste)
																    function initBeneficiaryLogic() {
																        // Recherche robuste des éléments
																        const benificGroup = document.getElementById('nbrBenificGroup');
																        const dateFields = document.querySelectorAll('.date-field');
																        
																        // Plusieurs méthodes de recherche pour le champ bénéficiaire
																        let benificField = document.getElementById('benificaire') || 
																                          document.querySelector('[name$="[benificaire]"]') ||
																                          document.querySelector('select[name*="benificaire"]');
																        
																        let nbrBenificField = document.getElementById('nbrBenific') || 
																                             document.querySelector('[name$="[nbrBenific]"]');
																        
																        if (!benificField || !benificGroup) {
																            console.warn('Éléments bénéficiaires non trouvés - fonctionnalité désactivée');
																            return;
																        }
																        
																        // Fonction simple pour vérifier "Oui"
																        function isYes(value) {
																            return value && ['oui', 'o', '1', 'true', 'yes'].includes(value.toString().toLowerCase().trim());
																        }
																        
																        // Fonction pour obtenir la valeur
																        function getBeneficiaryValue() {
																            if (benificField.tagName === 'SELECT') {
																                return benificField.value;
																            }
																            if (benificField.type === 'radio') {
																                const checked = document.querySelector(`input[name="${benificField.name}"]:checked`);
																                return checked ? checked.value : '';
																            }
																            return benificField.value || '';
																        }
																        
																        // Fonction principale de toggle
																        function toggleBeneficiaryFields() {
																            const value = getBeneficiaryValue();
																            const showGroup = isYes(value);
																            
																            // Animation CSS smooth
																            benificGroup.style.transition = 'all 0.3s ease';
																            benificGroup.style.display = showGroup ? 'block' : 'none';
																            
																            if (showGroup) {
																                benificGroup.style.opacity = '0';
																                requestAnimationFrame(() => {
																                    benificGroup.style.opacity = '1';
																                });
																                updateDateFields();
																            } else {
																                // Cacher tous les champs de date
																                dateFields.forEach(field => {
																                    field.style.display = 'none';
																                });
																            }
																        }
																        
																        // Fonction pour les champs de date
																        function updateDateFields() {
																            if (!nbrBenificField) return;
																            
																            const nbrValue = parseInt(nbrBenificField.value) || 0;
																            
																            // Animation douce
																            dateFields.forEach((field, index) => {
																                const shouldShow = index < nbrValue;
																                field.style.transition = 'all 0.3s ease';
																                field.style.display = shouldShow ? 'block' : 'none';
																                
																                if (shouldShow) {
																                    field.style.opacity = '0';
																                    requestAnimationFrame(() => {
																                        field.style.opacity = '1';
																                    });
																                }
																            });
																        }
																        
																        // Écouteurs d'événements unifiés
																        function addChangeListener(element, callback) {
																            ['change', 'input'].forEach(event => {
																                element.addEventListener(event, callback);
																            });
																        }
																        
																        // Configuration des écouteurs
																        if (benificField.type === 'radio') {
																            document.querySelectorAll(`input[name="${benificField.name}"]`)
																                   .forEach(radio => addChangeListener(radio, toggleBeneficiaryFields));
																        } else {
																            addChangeListener(benificField, toggleBeneficiaryFields);
																        }
																        
																        if (nbrBenificField) {
																            addChangeListener(nbrBenificField, updateDateFields);
																        }
																        
																        // Initialisation
																        toggleBeneficiaryFields();
																    }
																    
																    // 3. Navigation entre étapes (version robuste)
																    function initStepNavigation() {
																        const step1 = document.getElementById("step1");
																        const step2 = document.getElementById("step2");
																        const steps = document.querySelectorAll(".step");
																        const nextBtn = document.getElementById("next-step1");
																        const prevBtn = document.getElementById("prev-step2");
																        
																        if (!nextBtn || !prevBtn || !step1 || !step2) {
																            console.warn('Éléments de navigation non trouvés');
																            return;
																        }
																        
																        // Validation des champs
																        function validateStep1() {
																            const requiredFields = [
																                'brithdate', 'postal', 'regimSocial', 'benificaire'
																            ].map(name => document.querySelector(`[name$="[${name}]"]`))
																             .filter(field => field !== null);
																            
																            let isValid = true;
																            
																            requiredFields.forEach(field => {
																                field.classList.remove("is-invalid");
																                
																                if (!field.value || field.value.trim() === "") {
																                    field.classList.add("is-invalid");
																                    isValid = false;
																                }
																            });
																            
																            // Validation spéciale pour nbrBenific si nécessaire
																            const benificField = document.querySelector('[name$="[benificaire]"]');
																            const nbrField = document.querySelector('[name$="[nbrBenific]"]');
																            
																            if (benificField && nbrField && 
																                ['oui', '1'].includes(benificField.value.toLowerCase()) &&
																                (!nbrField.value || nbrField.value.trim() === "")) {
																                nbrField.classList.add("is-invalid");
																                isValid = false;
																            }
																            
																            return isValid;
																        }
																        
																        // Animation de transition douce
																        function transitionToStep(fromStep, toStep, fromStepIndicator, toStepIndicator) {
																            // Animation sortante
																            fromStep.style.opacity = '0';
																            fromStep.style.transform = 'translateX(-20px)';
																            
																            setTimeout(() => {
																                fromStep.classList.remove("active");
																                toStep.classList.add("active");
																                
																                // Animation entrante
																                toStep.style.opacity = '0';
																                toStep.style.transform = 'translateX(20px)';
																                
																                requestAnimationFrame(() => {
																                    toStep.style.transition = 'all 0.3s ease';
																                    toStep.style.opacity = '1';
																                    toStep.style.transform = 'translateX(0)';
																                });
																                
																                // Mise à jour des indicateurs d'étapes
																                fromStepIndicator.classList.remove("active");
																                toStepIndicator.classList.add("active");
																                
																                // Scroll doux vers le formulaire
																                const formulaire = document.getElementById("formulaire");
																                if (formulaire) {
																                    formulaire.scrollIntoView({ 
																                        behavior: 'smooth', 
																                        block: 'start',
																                        inline: 'nearest'
																                    });
																                }
																            }, 150);
																        }
																        
																        // Gestionnaires d'événements
																        nextBtn.addEventListener("click", function() {
																            if (!validateStep1()) {
																                // Feedback utilisateur plus doux
																                const firstInvalid = document.querySelector('.is-invalid');
																                if (firstInvalid) {
																                    firstInvalid.focus();
																                    firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
																                }
																                
																                // Message d'erreur discret
																                showMessage("Merci de remplir tous les champs obligatoires", "warning");
																                return;
																            }
																            
																            transitionToStep(step1, step2, steps[0], steps[1]);
																        });
																        
																        prevBtn.addEventListener("click", function() {
																            transitionToStep(step2, step1, steps[1], steps[0]);
																        });
																    }
																    
																    // 4. Fonction utilitaire pour les messages
																    function showMessage(text, type = "info") {
																        // Création d'un toast simple
																        const toast = document.createElement('div');
																        toast.className = `toast toast-${type}`;
																        toast.style.cssText = `
																            position: fixed;
																            top: 20px;
																            right: 20px;
																            padding: 1rem 1.5rem;
																            background: ${type === 'warning' ? '#fbbf24' : '#10b981'};
																            color: white;
																            border-radius: 8px;
																            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
																            z-index: 9999;
																            transform: translateX(400px);
																            transition: transform 0.3s ease;
																            font-weight: 500;
																        `;
																        toast.textContent = text;
																        
																        document.body.appendChild(toast);
																        
																        // Animation d'entrée
																        requestAnimationFrame(() => {
																            toast.style.transform = 'translateX(0)';
																        });
																        
																        // Suppression automatique
																        setTimeout(() => {
																            toast.style.transform = 'translateX(400px)';
																            setTimeout(() => document.body.removeChild(toast), 300);
																        }, 3000);
																    }
																    
																    // 5. Amélioration des inputs pour Safari Mobile
																    function enhanceInputs() {
																        const inputs = document.querySelectorAll('input, select, textarea');
																        
																        inputs.forEach(input => {
																            // Classe utilitaire pour la stabilité
																            input.classList.add('safari-stable', 'no-zoom');
																            
																            // Empêcher les comportements indésirables
																            input.addEventListener('focus', function() {
																                this.style.fontSize = '16px';
																                this.style.webkitTransform = 'translateZ(0)';
																            });
																            
																            // Gestion douce du blur
																            input.addEventListener('blur', function() {
																                // Petite pause avant nettoyage
																                setTimeout(() => {
																                    this.classList.remove('is-invalid');
																                }, 100);
																            });
																        });
																    }
																    
																    // Initialisation globale
																    try {
																        initSafariMobileFix();
																        initBeneficiaryLogic();
																        initStepNavigation();
																        enhanceInputs();
																        
																        console.log('Formulaire initialisé avec succès');
																    } catch (error) {
																        console.error('Erreur lors de l\'initialisation:', error);
																        // Fallback gracieux
																        document.body.classList.add('form-fallback-mode');
																    }
																});
																
																// CSS additionnel injecté via JavaScript pour une compatibilité maximale
																const additionalStyles = `
																<style>
																.toast {
																    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
																}
																
																.safari-mobile-device .form-container {
																    transform: translate3d(0, 0, 0);
																    -webkit-transform: translate3d(0, 0, 0);
																}
																
																.form-fallback-mode .form-step {
																    display: block !important;
																    opacity: 1 !important;
																}
																
																.form-fallback-mode .form-step:not(.active) {
																    display: none !important;
																}
																
																@supports (-webkit-touch-callout: none) {
																    .safari-stable {
																        -webkit-transform: translateZ(0) !important;
																        transform: translateZ(0) !important;
																    }
																    
																    .no-zoom {
																        font-size: 16px !important;
																        -webkit-text-size-adjust: 100% !important;
																    }
																}
																</style>
																`;
																
																// Injection du CSS additionnel
																document.head.insertAdjacentHTML('beforeend', additionalStyles);
												
															
															
																</script>


{% endblock %}
